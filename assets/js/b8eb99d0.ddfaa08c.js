"use strict";(self.webpackChunkncmlab=self.webpackChunkncmlab||[]).push([[622],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=s(n),k=r,d=u["".concat(p,".").concat(k)]||u[k]||c[k]||o;return n?a.createElement(d,i(i({ref:t},m),{},{components:n})):a.createElement(d,i({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=k;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},5162:(e,t,n)=>{n(7294)},5252:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));n(5162);const o={title:"Building a DevStation"},i=void 0,l={unversionedId:"appendix/devstation",id:"appendix/devstation",title:"Building a DevStation",description:"A best practice when administrating and managing your production workload system in the real-world",source:"@site/docs/appendix/devstation.mdx",sourceDirName:"appendix",slug:"/appendix/devstation",permalink:"/ncmlab/appendix/devstation",draft:!1,editUrl:"https://github.com/bhgoh/ncmlab/docs/appendix/devstation.mdx",tags:[],version:"current",frontMatter:{title:"Building a DevStation"},sidebar:"tutorialSidebar",previous:{title:"Lab 9 - Nutanix Kubernetes Engine - NKE",permalink:"/ncmlab/cloud_native/nke"}},p={},s=[{value:"Deploying a Linux VM",id:"deploying-a-linux-vm",level:2}],m={toc:s},u="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A best practice when administrating and managing your production workload system in the real-world\nis through a jump-box type like machine in which can access directly and as a gateway towards your\nproduction machines. We will liken this jump-box like a developer workstation-DevStation where management\ntools and it dependencies can all be installed into a single location to faciliate those connections.\nIt can also be rather handy as a machine where you can write your scripts to be deployed against them."),(0,r.kt)("p",null,"This is entirely an optional exercise as without this, you can still complete all the labs given."),(0,r.kt)("p",null,"However, if a DevStation is for you, please continute with the rest of this section to build your own\ndream DevStation!"),(0,r.kt)("h2",{id:"deploying-a-linux-vm"},"Deploying a Linux VM"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In ",(0,r.kt)("strong",{parentName:"p"},"Prism Central")," > select ",(0,r.kt)("strong",{parentName:"p"},"Menu")," > ",(0,r.kt)("strong",{parentName:"p"},"Compute and Storage")," > ",(0,r.kt)("strong",{parentName:"p"},"VMs"),", and click\n",(0,r.kt)("strong",{parentName:"p"},"Create VM"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Fill out the following fields:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Name:")," Initials-Linux-ToolsVM"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Description:")," (Optional) Description for your VM."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Number of VMs:")," 1"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CPU(s):")," 4"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Number of Cores per CPU:")," 1"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Memory:")," 4 GiB"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Next"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Under ",(0,r.kt)("strong",{parentName:"p"},"Disks")," select ",(0,r.kt)("strong",{parentName:"p"},"Attach Disk")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Type:")," DISK"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Operation:")," Clone from Image"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Image:")," Linux_ToolsVM.qcow2"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Capacity:")," leave at default size"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Bus Type:")," leave at default SCSI Setting"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Save"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Under ",(0,r.kt)("strong",{parentName:"p"},"Networks")," select ",(0,r.kt)("strong",{parentName:"p"},"Attach to Subnet")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"VLAN Name:")," Primary"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Network Connection State:")," Connected"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Assignment Type:")," - Assign with DHCP"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Save"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Next")," at the bottom")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In Management section"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Categories:")," leave blank")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Timezone:")," leave at default UTC")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Guest Customization:")," -"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Script Type:")," Cloud-init (Linux)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Configuration Method:")," Custom Script"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"#cloud-config\n\n# Set the hostname\nhostname: myhost\n\n# Create a new user\nusers:\n  - default\n  - name: nutanix\n    groups: wheel, users\n    ssh_authorized_keys:\n # Paste the generated public key here\n - ssh-rsa AAAAB3NzaC1....\n # You can also use the salter 1N or 6N format using OPENSSL (openssl passwd -1 -salt SaltSalt \"yourplaintextpassword\")\n # Paste the generated password here\n passwd: $1$SaltSalt$aOsqVFP2QULyFo5JYkOYB/\n shell: /bin/bash\n lock-passwd: false\n ssh_pwauth: True                 \n\n # Enable password authentication for root\n ssh_pwauth: True\n\n # Run additional commands\n runcmd:\n - 'sleep 10' # sleeping for the network to be UP\n - 'echo \"nutanix ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers'\n\n # Run package upgrade\n package_upgrade: true\n\n # Install the following packages - add extra that you would need\n packages:\n - git\n - bind-utils\n - nmap\n - curl\n - wget \n - vim\n - python3\n - python3-pip\n"))))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click on ",(0,r.kt)("strong",{parentName:"p"},"Next"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Create VM")," at the bottom.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Go back to ",(0,r.kt)("strong",{parentName:"p"},"Prism Central > Menu > Compute and Storage > VMs"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Select your _initials_Linux-ToolsVM.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Under ",(0,r.kt)("strong",{parentName:"p"},"Actions")," drop-down menu, choose ",(0,r.kt)("strong",{parentName:"p"},"Power On"),"."))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"It may take up to 10 minutes for the VM to be ready."),(0,r.kt)("p",{parentName:"admonition"},"You can watch the console of the VM from Prism Central to make sure all\nthe clouinit script has finished running.")),(0,r.kt)("ol",{start:15},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Login to the VM via SSH or Console session, using the following command:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"ssh -i <your_private_key> -l nutanix <IP of LinuxToolsVM>\n")))))}c.isMDXComponent=!0}}]);